define(["./AttributeCompression-dc95bf1b","./Cartesian2-fe435665","./Math-e9e583a9","./createTaskProcessorWorker","./when-23b1aa97"],function(b,d,m,a,r){"use strict";var w=32767,y=new d.Cartographic,v=new d.Cartesian3,k=new d.Rectangle,A=new d.Ellipsoid,M={min:void 0,max:void 0};return a(function(a,r){var e=new Uint16Array(a.positions);!function(a){a=new Float64Array(a);var r=0;M.min=a[r++],M.max=a[r++],d.Rectangle.unpack(a,2,k),r+=d.Rectangle.packedLength,d.Ellipsoid.unpack(a,r,A)}(a.packedBuffer);var t=k,n=A,i=M.min,s=M.max,o=e.length/3,c=e.subarray(0,o),l=e.subarray(o,2*o),p=e.subarray(2*o,3*o);b.AttributeCompression.zigZagDeltaDecode(c,l,p);for(var u=new Float64Array(e.length),f=0;f<o;++f){var h=c[f],g=l[f],C=p[f],h=m.CrystalMath.lerp(t.west,t.east,h/w),g=m.CrystalMath.lerp(t.south,t.north,g/w),C=m.CrystalMath.lerp(i,s,C/w),C=d.Cartographic.fromRadians(h,g,C,y),C=n.cartographicToCartesian(C,v);d.Cartesian3.pack(C,u,3*f)}return r.push(u.buffer),{positions:u.buffer}})});
