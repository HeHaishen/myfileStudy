define(["./when-23b1aa97","./Cartesian2-fe435665","./ArcType-94cbcc5d","./GeometryOffsetAttribute-506315d8","./Transforms-21fa56f0","./Math-e9e583a9","./ComponentDatatype-db261df2","./EllipsoidTangentPlane-3934f12e","./GeometryAttribute-e2cab2f1","./GeometryAttributes-bf6191be","./GeometryInstance-f73501bb","./GeometryPipeline-ad571d9b","./IndexDatatype-5483de1e","./PolygonGeometryLibrary-275fb1ab","./PolygonPipeline-7f6972cc","./RuntimeError-acd9a015","./WebGLConstants-c32c4572","./IntersectionTests-5927aeeb","./Plane-95acb6df","./AttributeCompression-dc95bf1b","./EncodedCartesian3-c1064016","./arrayRemoveDuplicates-72d928ba","./EllipsoidRhumbLine-5fcd2f7f"],function(m,d,E,b,P,A,_,v,G,L,T,H,O,C,D,e,t,i,r,o,n,a,l){"use strict";var x=[],I=[];function c(e){var t,i=e.polygonHierarchy,r=m.defaultValue(e.ellipsoid,d.Ellipsoid.WGS84),o=m.defaultValue(e.granularity,A.CrystalMath.RADIANS_PER_DEGREE),n=m.defaultValue(e.perPositionHeight,!1),a=n&&m.defined(e.extrudedHeight),l=m.defaultValue(e.arcType,E.ArcType.GEODESIC),y=m.defaultValue(e.height,0),s=m.defaultValue(e.extrudedHeight,y);a||(t=Math.max(y,s),s=Math.min(y,s),y=t),this._ellipsoid=d.Ellipsoid.clone(r),this._granularity=o,this._height=y,this._extrudedHeight=s,this._arcType=l,this._polygonHierarchy=i,this._perPositionHeight=n,this._perPositionHeightExtrude=a,this._offsetAttribute=e.offsetAttribute,this._workerName="createPolygonOutlineGeometry",this.packedLength=C.PolygonGeometryLibrary.computeHierarchyPackedLength(i)+d.Ellipsoid.packedLength+8}c.pack=function(e,t,i){return i=m.defaultValue(i,0),i=C.PolygonGeometryLibrary.packPolygonHierarchy(e._polygonHierarchy,t,i),d.Ellipsoid.pack(e._ellipsoid,t,i),i+=d.Ellipsoid.packedLength,t[i++]=e._height,t[i++]=e._extrudedHeight,t[i++]=e._granularity,t[i++]=e._perPositionHeightExtrude?1:0,t[i++]=e._perPositionHeight?1:0,t[i++]=e._arcType,t[i++]=m.defaultValue(e._offsetAttribute,-1),t[i]=e.packedLength,t};var f=d.Ellipsoid.clone(d.Ellipsoid.UNIT_SPHERE),g={polygonHierarchy:{}};return c.unpack=function(e,t,i){t=m.defaultValue(t,0);var r=C.PolygonGeometryLibrary.unpackPolygonHierarchy(e,t);t=r.startingIndex,delete r.startingIndex;var o=d.Ellipsoid.unpack(e,t,f);t+=d.Ellipsoid.packedLength;var n=e[t++],a=e[t++],l=e[t++],y=1===e[t++],s=1===e[t++],u=e[t++],p=e[t++],t=e[t];return(i=!m.defined(i)?new c(g):i)._polygonHierarchy=r,i._ellipsoid=d.Ellipsoid.clone(o,i._ellipsoid),i._height=n,i._extrudedHeight=a,i._granularity=l,i._perPositionHeight=s,i._perPositionHeightExtrude=y,i._arcType=u,i._offsetAttribute=-1===p?void 0:p,i.packedLength=t,i},c.fromPositions=function(e){return new c({polygonHierarchy:{positions:(e=m.defaultValue(e,m.defaultValue.EMPTY_OBJECT)).positions},height:e.height,extrudedHeight:e.extrudedHeight,ellipsoid:e.ellipsoid,granularity:e.granularity,perPositionHeight:e.perPositionHeight,arcType:e.arcType,offsetAttribute:e.offsetAttribute})},c.createGeometry=function(e){var t=e._ellipsoid,i=e._granularity,r=e._polygonHierarchy,o=e._perPositionHeight,n=e._arcType,a=C.PolygonGeometryLibrary.polygonOutlinesFromHierarchy(r,!o,t);if(0!==a.length){var l,y,s,u,p,d,c=[],f=A.CrystalMath.chordLength(i,t.maximumRadius),g=e._height,h=e._extrudedHeight;if(e._perPositionHeightExtrude||!A.CrystalMath.equalsEpsilon(g,h,0,A.CrystalMath.EPSILON2))for(l=0;l<a.length;l++)(u=function(e,t,i,r,o){var n,a=v.EllipsoidTangentPlane.fromPoints(t,e).projectPointsOntoPlane(t,x);D.PolygonPipeline.computeWindingOrder2D(a)===D.WindingOrder.CLOCKWISE&&(a.reverse(),t=t.slice().reverse());var l=t.length,y=new Array(l),s=0;if(r)for(n=new Float64Array(2*l*3*2),b=0;b<l;++b){y[b]=s/3;var u=t[b],p=t[(b+1)%l];n[s++]=u.x,n[s++]=u.y,n[s++]=u.z,n[s++]=p.x,n[s++]=p.y,n[s++]=p.z}else{var d,c=0;if(o===E.ArcType.GEODESIC)for(b=0;b<l;b++)c+=C.PolygonGeometryLibrary.subdivideLineCount(t[b],t[(b+1)%l],i);else if(o===E.ArcType.RHUMB)for(b=0;b<l;b++)c+=C.PolygonGeometryLibrary.subdivideRhumbLineCount(e,t[b],t[(b+1)%l],i);for(n=new Float64Array(3*c*2),b=0;b<l;++b){y[b]=s/3,o===E.ArcType.GEODESIC?d=C.PolygonGeometryLibrary.subdivideLine(t[b],t[(b+1)%l],i,I):o===E.ArcType.RHUMB&&(d=C.PolygonGeometryLibrary.subdivideRhumbLine(e,t[b],t[(b+1)%l],i,I));for(var f=d.length,g=0;g<f;++g)n[s++]=d[g]}}for(var l=n.length/6,h=y.length,r=2*(2*l+h),m=O.IndexDatatype.createTypedArray(l+h,r),s=0,b=0;b<l;++b)m[s++]=b,m[s++]=(b+1)%l,m[s++]=b+l,m[s++]=(b+1)%l+l;for(b=0;b<h;b++){var P=y[b];m[s++]=P,m[s++]=P+l}return new T.GeometryInstance({geometry:new G.Geometry({attributes:new L.GeometryAttributes({position:new G.GeometryAttribute({componentDatatype:_.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:n})}),indices:m,primitiveType:G.PrimitiveType.LINES})})}(t,a[l],f,o,n)).geometry=C.PolygonGeometryLibrary.scaleToGeodeticHeightExtruded(u.geometry,g,h,t,o),m.defined(e._offsetAttribute)&&(y=u.geometry.attributes.position.values.length/3,s=new Uint8Array(y),s=e._offsetAttribute===b.GeometryOffsetAttribute.TOP?b.arrayFill(s,1,0,y/2):(d=e._offsetAttribute===b.GeometryOffsetAttribute.NONE?0:1,b.arrayFill(s,d)),u.geometry.attributes.applyOffset=new G.GeometryAttribute({componentDatatype:_.ComponentDatatype.UNSIGNED_BYTE,componentsPerAttribute:1,values:s})),c.push(u);else for(l=0;l<a.length;l++)(u=function(e,t,i,r,o){var n,a=v.EllipsoidTangentPlane.fromPoints(t,e).projectPointsOntoPlane(t,x);D.PolygonPipeline.computeWindingOrder2D(a)===D.WindingOrder.CLOCKWISE&&(a.reverse(),t=t.slice().reverse());var l=t.length,y=0;if(r)for(n=new Float64Array(2*l*3),h=0;h<l;h++){var s=t[h],u=t[(h+1)%l];n[y++]=s.x,n[y++]=s.y,n[y++]=s.z,n[y++]=u.x,n[y++]=u.y,n[y++]=u.z}else{var p,d=0;if(o===E.ArcType.GEODESIC)for(h=0;h<l;h++)d+=C.PolygonGeometryLibrary.subdivideLineCount(t[h],t[(h+1)%l],i);else if(o===E.ArcType.RHUMB)for(h=0;h<l;h++)d+=C.PolygonGeometryLibrary.subdivideRhumbLineCount(e,t[h],t[(h+1)%l],i);for(n=new Float64Array(3*d),h=0;h<l;h++){o===E.ArcType.GEODESIC?p=C.PolygonGeometryLibrary.subdivideLine(t[h],t[(h+1)%l],i,I):o===E.ArcType.RHUMB&&(p=C.PolygonGeometryLibrary.subdivideRhumbLine(e,t[h],t[(h+1)%l],i,I));for(var c=p.length,f=0;f<c;++f)n[y++]=p[f]}}for(var r=2*(l=n.length/3),g=O.IndexDatatype.createTypedArray(l,r),y=0,h=0;h<l-1;h++)g[y++]=h,g[y++]=h+1;return g[y++]=l-1,g[y++]=0,new T.GeometryInstance({geometry:new G.Geometry({attributes:new L.GeometryAttributes({position:new G.GeometryAttribute({componentDatatype:_.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:n})}),indices:g,primitiveType:G.PrimitiveType.LINES})})}(t,a[l],f,o,n)).geometry.attributes.position.values=D.PolygonPipeline.scaleToGeodeticHeight(u.geometry.attributes.position.values,g,t,!o),m.defined(e._offsetAttribute)&&(p=u.geometry.attributes.position.values.length,p=new Uint8Array(p/3),d=e._offsetAttribute===b.GeometryOffsetAttribute.NONE?0:1,b.arrayFill(p,d),u.geometry.attributes.applyOffset=new G.GeometryAttribute({componentDatatype:_.ComponentDatatype.UNSIGNED_BYTE,componentsPerAttribute:1,values:p})),c.push(u);r=H.GeometryPipeline.combineInstances(c)[0],i=P.BoundingSphere.fromVertices(r.attributes.position.values);return new G.Geometry({attributes:r.attributes,indices:r.indices,primitiveType:r.primitiveType,boundingSphere:i,offsetAttribute:e._offsetAttribute})}},function(e,t){return(e=m.defined(t)?c.unpack(e,t):e)._ellipsoid=d.Ellipsoid.clone(e._ellipsoid),c.createGeometry(e)}});
