define(["./when-23b1aa97","./Cartesian2-fe435665","./arrayRemoveDuplicates-72d928ba","./BoundingRectangle-e4803dfe","./Transforms-21fa56f0","./ComponentDatatype-db261df2","./PolylineVolumeGeometryLibrary-e2cad490","./Math-e9e583a9","./GeometryAttribute-e2cab2f1","./GeometryAttributes-bf6191be","./GeometryPipeline-ad571d9b","./IndexDatatype-5483de1e","./PolygonPipeline-7f6972cc","./VertexFormat-4b1610fd","./RuntimeError-acd9a015","./WebGLConstants-c32c4572","./EllipsoidTangentPlane-3934f12e","./IntersectionTests-5927aeeb","./Plane-95acb6df","./PolylinePipeline-1446d6ce","./EllipsoidGeodesic-27d7f111","./EllipsoidRhumbLine-5fcd2f7f","./AttributeCompression-dc95bf1b","./EncodedCartesian3-c1064016"],function(u,c,i,a,G,A,o,r,R,D,I,O,S,g,e,t,n,l,s,d,p,y,m,h){"use strict";var f={};function B(e,t){u.defined(f[e])||(f[e]=!0,console.warn(u.defaultValue(t,e)))}function b(e){var t=(e=u.defaultValue(e,u.defaultValue.EMPTY_OBJECT)).polylinePositions,n=e.shapePositions;this._positions=t,this._shape=n,this._ellipsoid=c.Ellipsoid.clone(u.defaultValue(e.ellipsoid,c.Ellipsoid.WGS84)),this._cornerType=u.defaultValue(e.cornerType,o.CornerType.ROUNDED),this._vertexFormat=g.VertexFormat.clone(u.defaultValue(e.vertexFormat,g.VertexFormat.DEFAULT)),this._granularity=u.defaultValue(e.granularity,r.CrystalMath.RADIANS_PER_DEGREE),this._workerName="createPolylineVolumeGeometry";t=1+t.length*c.Cartesian3.packedLength;t+=1+n.length*c.Cartesian2.packedLength,this.packedLength=t+c.Ellipsoid.packedLength+g.VertexFormat.packedLength+2}B.geometryOutlines="Entity geometry outlines are unsupported on terrain. Outlines will be disabled. To enable outlines, disable geometry terrain clamping by explicitly setting height to 0.",B.geometryZIndex="Entity geometry with zIndex are unsupported when height or extrudedHeight are defined.  zIndex will be ignored",B.geometryHeightReference="Entity corridor, ellipse, polygon or rectangle with heightReference must also have a defined height.  heightReference will be ignored",B.geometryExtrudedHeightReference="Entity corridor, ellipse, polygon or rectangle with extrudedHeightReference must also have a defined extrudedHeight.  extrudedHeightReference will be ignored",b.pack=function(e,t,n){var r;n=u.defaultValue(n,0);var i=e._positions,a=i.length;for(t[n++]=a,r=0;r<a;++r,n+=c.Cartesian3.packedLength)c.Cartesian3.pack(i[r],t,n);var o=e._shape,a=o.length;for(t[n++]=a,r=0;r<a;++r,n+=c.Cartesian2.packedLength)c.Cartesian2.pack(o[r],t,n);return c.Ellipsoid.pack(e._ellipsoid,t,n),n+=c.Ellipsoid.packedLength,g.VertexFormat.pack(e._vertexFormat,t,n),n+=g.VertexFormat.packedLength,t[n++]=e._cornerType,t[n]=e._granularity,t};var v=c.Ellipsoid.clone(c.Ellipsoid.UNIT_SPHERE),E=new g.VertexFormat,P={polylinePositions:void 0,shapePositions:void 0,ellipsoid:v,vertexFormat:E,cornerType:void 0,granularity:void 0};b.unpack=function(e,t,n){t=u.defaultValue(t,0);for(var r=e[t++],i=new Array(r),a=0;a<r;++a,t+=c.Cartesian3.packedLength)i[a]=c.Cartesian3.unpack(e,t);var r=e[t++],o=new Array(r);for(a=0;a<r;++a,t+=c.Cartesian2.packedLength)o[a]=c.Cartesian2.unpack(e,t);var l=c.Ellipsoid.unpack(e,t,v);t+=c.Ellipsoid.packedLength;var s=g.VertexFormat.unpack(e,t,E);t+=g.VertexFormat.packedLength;var d=e[t++],p=e[t];return u.defined(n)?(n._positions=i,n._shape=o,n._ellipsoid=c.Ellipsoid.clone(l,n._ellipsoid),n._vertexFormat=g.VertexFormat.clone(s,n._vertexFormat),n._cornerType=d,n._granularity=p,n):(P.polylinePositions=i,P.shapePositions=o,P.cornerType=d,P.granularity=p,new b(P))};var _=new a.BoundingRectangle;return b.createGeometry=function(e){var t=e._positions,n=i.arrayRemoveDuplicates(t,c.Cartesian3.equalsEpsilon),r=e._shape,r=o.PolylineVolumeGeometryLibrary.removeDuplicatesFromShape(r);if(!(n.length<2||r.length<3)){S.PolygonPipeline.computeWindingOrder2D(r)===S.WindingOrder.CLOCKWISE&&r.reverse();t=a.BoundingRectangle.fromPoints(r,_);return function(e,t,n,r){var i=new D.GeometryAttributes;r.position&&(i.position=new R.GeometryAttribute({componentDatatype:A.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:e}));var a,o,l,s,d,p=t.length,u=e.length/3,c=(u-2*p)/(2*p),g=S.PolygonPipeline.triangulate(t),y=(c-1)*p*6+2*g.length,m=O.IndexDatatype.createTypedArray(u,y),h=2*p,f=0;for(V=0;V<c-1;V++){for(a=0;a<p-1;a++)d=(o=2*a+V*p*2)+h,s=(l=o+1)+h,m[f++]=l,m[f++]=o,m[f++]=s,m[f++]=s,m[f++]=o,m[f++]=d;s=(l=(o=2*p-2+V*p*2)+1)+h,d=o+h,m[f++]=l,m[f++]=o,m[f++]=s,m[f++]=s,m[f++]=o,m[f++]=d}if(r.st||r.tangent||r.bitangent){for(var b,v,E=new Float32Array(2*u),P=1/(c-1),_=1/n.height,x=n.height/2,k=0,V=0;V<c;V++){for(b=V*P,v=_*(t[0].y+x),E[k++]=b,E[k++]=v,a=1;a<p;a++)v=_*(t[a].y+x),E[k++]=b,E[k++]=v,E[k++]=b,E[k++]=v;v=_*(t[0].y+x),E[k++]=b,E[k++]=v}for(a=0;a<p;a++)b=0,v=_*(t[a].y+x),E[k++]=b,E[k++]=v;for(a=0;a<p;a++)b=(c-1)*P,v=_*(t[a].y+x),E[k++]=b,E[k++]=v;i.st=new R.GeometryAttribute({componentDatatype:A.ComponentDatatype.FLOAT,componentsPerAttribute:2,values:new Float32Array(E)})}var C=u-2*p;for(V=0;V<g.length;V+=3){var L=g[V]+C,w=g[V+1]+C,F=g[V+2]+C;m[f++]=L,m[f++]=w,m[f++]=F,m[f++]=F+p,m[f++]=w+p,m[f++]=L+p}var T=new R.Geometry({attributes:i,indices:m,boundingSphere:G.BoundingSphere.fromVertices(e),primitiveType:R.PrimitiveType.TRIANGLES});if(r.normal&&(T=I.GeometryPipeline.computeNormal(T)),r.tangent||r.bitangent){try{T=I.GeometryPipeline.computeTangentAndBitangent(T)}catch(e){B("polyline-volume-tangent-bitangent","Unable to compute tangents and bitangents for polyline volume geometry")}r.tangent||(T.attributes.tangent=void 0),r.bitangent||(T.attributes.bitangent=void 0),r.st||(T.attributes.st=void 0)}return T}(o.PolylineVolumeGeometryLibrary.computePositions(n,r,t,e,!0),r,t,e._vertexFormat)}},function(e,t){return(e=u.defined(t)?b.unpack(e,t):e)._ellipsoid=c.Ellipsoid.clone(e._ellipsoid),b.createGeometry(e)}});
